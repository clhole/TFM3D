function BlandAltmanPlot( serieseval, imgpairlbl, ualg, uparamset, ueval, varargin )
%BLANDALTMANPLOT
%Input:
%   <imgpaireval>      image pair series evaluation generated by <TFMSim3D.m>
%   <imgpairlbl>       image pair name
%   <ualg>             name of displacement calculation algorithm
%   <uparamset>        parameter set number for displacement calculation
%   <ueval>            name of displacement evaluation method
%   <Talg>             (optional) name of traction calculation algorithm
%   <Tparamset>        (optional) parameter set number for traction calculation
%   <Teval>            (optional) name of traction evaluation method
%CL

% Determine method
if ~isempty(varargin)
    % Use traction data
    method = 'T';
    Talg = varargin{1};
    Tparamset = varargin{2};
    Teval = varargin{3};
    if strcmp('substrate',Teval)
        xlbl = 'Average of given and calculated stress tensor components [Pa]';
        ylbl = 'Difference of given and calculated stress tensor components [Pa]';
    else
        xlbl = 'Average of given and calculated surface tractions [Pa]';
        ylbl = 'Difference of given and calculated surface tractions [Pa]';
    end
else
    % Use displacement data
    method = 'u';
    xlbl = 'Average of given and calculated displacements |u| [µm]';
    ylbl = 'Difference of given and calculated displacements |u| [µm]';
end

ndatasets = serieseval.ndatasets;
c = lines(ndatasets); % Colors
allDM = [];

figure
hold on
title('Bland-Altman plot')
xlabel(xlbl)
ylabel(ylbl)

% Plot data points
for j = 1:ndatasets
    if strcmp('T',method)
        MM = serieseval.T.(imgpairlbl).(ualg).(ueval){uparamset}.(Talg).(Teval){Tparamset}.data{j}.MM;
        DM = serieseval.T.(imgpairlbl).(ualg).(ueval){uparamset}.(Talg).(Teval){Tparamset}.data{j}.DM;
    else
        MM = serieseval.u.(imgpairlbl).(ualg).(ueval){uparamset}.data{j}.MM;
        DM = serieseval.u.(imgpairlbl).(ualg).(ueval){uparamset}.data{j}.DM;
    end
    allDM = [allDM;DM];
    scatter(MM,DM,'x','MarkerEdgeColor',c(j,:))    
    lstr{j} = sprintf('imgpair%03d',j);
    legend(lstr);
end

% Plot mean, mean+1.96"std, mean-1.96*std of all data points
meanDM = mean(allDM);
stdDM = std(allDM);
plot(xlim,[meanDM,meanDM],'b')
plot(xlim,[meanDM+1.96*stdDM,meanDM+1.96*stdDM],'r--')
plot(xlim,[meanDM-1.96*stdDM,meanDM-1.96*stdDM],'r--')

end

